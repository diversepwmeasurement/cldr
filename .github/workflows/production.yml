jobs:
  build:
    name: Build for Production
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Clone Repository (Custom Ref)
      uses: actions/checkout@v4
      with:
        lfs: false
        ref: ${{ github.event.inputs.git-ref }}
    - continue-on-error: true
      id: tagname
      name: Calculate Tag Name
      run: 'echo "::set-output name=tag::$(env TZ=UTC date +''production/%Y-%m-%d-%H%Mz'')"

        '
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 11
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('tools/**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Cache local npm repository
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        path: ~/.npm
        restore-keys: '${{ runner.os }}-node-

          node-

          '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Build with Maven
      run: 'mvn -s .github/workflows/mvn-settings.xml -B compile install package --file
        tools/pom.xml -DskipTests=true

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Build liberty server
      run: 'mvn -s .github/workflows/mvn-settings.xml -B  -pl cldr-apps liberty:create
        liberty:deploy liberty:package -Dinclude=usr --file tools/pom.xml -DskipTests=true

        '
    - continue-on-error: true
      name: Cleanup liberty server
      run: 'zip tools/cldr-apps/target/cldr-apps.zip  -d  wlp/usr/servers/cldr/apps/expanded/\*

        '
    - continue-on-error: true
      name: Upload cldr-apps.zip
      uses: actions/upload-artifact@v3
      with:
        name: cldr-apps-server
        path: tools/cldr-apps/target/cldr-apps.zip
    - continue-on-error: true
      name: Create Release for Production
      uses: ncipollo/release-action@v1.13.0
      with:
        body: "Automated release from \u2019production\u2019 Action"
        commit: ${{ github.event.inputs.git-ref }}
        prerelease: true
        tag: ${{ steps.tagname.outputs.tag }}
  deploy:
    name: Deploy to Production
    needs:
    - build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download cldr-apps.zip
      uses: actions/download-artifact@v3
      with:
        name: cldr-apps-server
    - continue-on-error: true
      env:
        DEPLOY_SHA: ${{ github.event.inputs.git-ref }}
        OVERRIDE: ${{ github.event.inputs.override }}
        RSA_KEY_SURVEYTOOL: ${{ secrets.RSA_KEY_SURVEYTOOL }}
        SURVEYTOOL_HOST: ${{ secrets.SURVEYTOOL_HOST }}
        SURVEYTOOL_KNOWNHOSTS: ${{ secrets.SURVEYTOOL_KNOWNHOSTS }}
        SURVEYTOOL_PORT: ${{ secrets.SURVEYTOOL_PORT }}
      name: Deploy to st
      run: 'echo "${RSA_KEY_SURVEYTOOL}" > .key && chmod go= .key

        echo "${SURVEYTOOL_KNOWNHOSTS}" > .knownhosts && chmod go= .knownhosts

        ssh -C -o UserKnownHostsFile=.knownhosts -i .key -p ${SURVEYTOOL_PORT} surveytool@${SURVEYTOOL_HOST}
        bash /usr/local/bin/deploy-to-openliberty.sh < cldr-apps.zip ${DEPLOY_SHA}
        ${OVERRIDE}

        '
      shell: bash
name: production
on:
  repository_dispatch:
    types: trigger-ga___production.yml
