jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: github.event.inputs.git-ref == ''
      name: Clone Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: false
    - continue-on-error: true
      if: github.event.inputs.git-ref != ''
      name: Clone Repository (manual ref)
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: false
        ref: ${{ github.event.inputs.git-ref }}
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 11
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('tools/**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Cache local npm repository
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        path: ~/.npm
        restore-keys: '${{ runner.os }}-node-

          node-

          '
    - continue-on-error: true
      name: Cache webpack
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-webpack-${{ hashFiles('tools/cldr-apps/package*') }}-${{
          hashFiles('tools/cldr-apps/src/**') }}
        path: tools/cldr-apps/target/webpack_cache
        restore-keys: '${{ runner.os }}-webpack-

          webpack-

          '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Build with Maven
      run: 'mvn -s .github/workflows/mvn-settings.xml -B compile install package --file
        tools/pom.xml -DskipTests=true

        '
    - continue-on-error: true
      name: Checkout CLDR archive
      run: 'mkdir -v ../cldr-archive && java -jar tools/cldr-code/target/cldr-code.jar
        checkout-archive

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Build liberty server
      run: 'mvn -s .github/workflows/mvn-settings.xml -B  -pl cldr-apps liberty:create
        liberty:deploy liberty:package -Dinclude=usr --file tools/pom.xml -DskipTests=true

        '
    - continue-on-error: true
      name: Cleanup liberty server
      run: 'zip tools/cldr-apps/target/cldr-apps.zip  -d  wlp/usr/servers/cldr/apps/expanded/\*

        '
    - continue-on-error: true
      name: Upload cldr-apps.zip
      uses: actions/upload-artifact@v3
      with:
        name: cldr-apps-server
        path: tools/cldr-apps/target/cldr-apps.zip
    - continue-on-error: true
      name: Upload cldr-code.jar
      uses: actions/upload-artifact@v3
      with:
        name: cldr-code
        path: tools/cldr-code/target/cldr-code.jar
    - continue-on-error: true
      name: BOM check in .xml files
      run: 'mvn -s .github/workflows/mvn-settings.xml --file tools/pom.xml -pl cldr-code
        exec:java -Dexec.mainClass=org.unicode.cldr.util.XMLValidator -Dexec.cleanupDaemonThreads=false
        -Dexec.args="-q --justCheckBom exemplars seed common keyboards" && echo ''No
        XML BOM detected''

        '
    - continue-on-error: true
      name: Schema check common/main in .xml files
      run: 'mvn -s .github/workflows/mvn-settings.xml --file tools/pom.xml -pl cldr-code
        exec:java -Dexec.mainClass=org.unicode.cldr.util.XMLValidator -Dexec.cleanupDaemonThreads=false
        -Dexec.args="-q --schema=common/dtd/ldml.xsd  common/main" || (echo ''Schema
        failed, rerun GenerateDtd'' ; exit 0)

        '
    - continue-on-error: true
      name: Keyboard Schema Check
      run: 'mvn -s .github/workflows/mvn-settings.xml --file tools/pom.xml -pl cldr-code
        exec:java -Dexec.mainClass=org.unicode.cldr.util.XMLValidator -Dexec.cleanupDaemonThreads=false
        -Dexec.args="--schema=keyboards/dtd/ldmlKeyboard.xsd keyboards/3.0" || (echo
        ''Schema failed, rerun GenerateDtd'' ; exit 0)

        '
    - continue-on-error: true
      name: Keyboard Test Schema Check
      run: 'mvn -s .github/workflows/mvn-settings.xml --file tools/pom.xml -pl cldr-code
        exec:java -Dexec.mainClass=org.unicode.cldr.util.XMLValidator -Dexec.cleanupDaemonThreads=false
        -Dexec.args="--schema=keyboards/dtd/ldmlKeyboardTest.xsd keyboards/test" ||
        (echo ''Schema failed, rerun GenerateDtd'' ; exit 0)

        '
    - continue-on-error: true
      name: Setup MySQL
      run: 'sudo systemctl start mysql.service

        sleep 3

        mysql --user=root --password=root < tools/cldr-apps/test-setup.sql

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Test with maven
      run: 'mvn -s .github/workflows/mvn-settings.xml -B test --file tools/pom.xml
        ''-Dorg.unicode.cldr.unittest.web.jdbcurl=jdbc:mysql://cldrtest:VbrB3LFCr6A!@localhost/cldrtest?useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC''
        ''-Dorg.unicode.cldr.unittest.web.KeepDb=true'' -DCLDR_GITHUB_ANNOTATIONS=true
        ''-Dorg.unicode.cldr.unittest.testArgs=-e10 -n'' ''-Dorg.unicode.cldr.unittest.web.testArgs=-e10
        -n'' ''-Dorg.unicode.cldr.api.testArgs=-e10 -n''

        '
  check:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: github.event.inputs.git-ref == ''
      name: Clone Repository
      uses: actions/checkout@v4
      with:
        lfs: false
    - continue-on-error: true
      if: github.event.inputs.git-ref != ''
      name: Clone Repository (manual ref)
      uses: actions/checkout@v4
      with:
        lfs: false
        ref: ${{ github.event.inputs.git-ref }}
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 11
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-mavencheck-${{ hashFiles('tools/**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-mavencheck-

          '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Build with Maven
      run: 'mvn -s .github/workflows/mvn-settings.xml -B compile package --file tools/pom.xml
        -pl cldr-code -DskipTests=true

        '
    - continue-on-error: true
      name: run CLDR console check
      run: java -DCLDR_GITHUB_ANNOTATIONS=true -DCLDR_DIR=$(pwd) -Xmx6g -jar tools/cldr-code/target/cldr-code.jar
        check -S common,seed -e -z FINAL_TESTING
  deploy:
    if: github.repository == 'unicode-org/cldr' && github.event_name == 'push' &&
      github.ref == 'refs/heads/main' && github.event.inputs.git-ref == ''
    needs:
    - build
    - check
    - formatter
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download cldr-apps.zip
      uses: actions/download-artifact@v3
      with:
        name: cldr-apps-server
    - continue-on-error: true
      env:
        RSA_KEY_SURVEYTOOL: ${{ secrets.RSA_KEY_SURVEYTOOL }}
        SMOKETEST_HOST: ${{ secrets.SMOKETEST_HOST }}
        SMOKETEST_KNOWNHOSTS: ${{ secrets.SMOKETEST_KNOWNHOSTS }}
        SMOKETEST_PORT: ${{ secrets.SMOKETEST_PORT }}
      if: ${{ github.event_name == 'push' }}
      name: Deploy to cldr-smoke
      run: 'echo "${RSA_KEY_SURVEYTOOL}" > .key && chmod go= .key

        echo "${SMOKETEST_KNOWNHOSTS}" > .knownhosts && chmod go= .knownhosts

        ssh -C -o UserKnownHostsFile=.knownhosts -i .key -p ${SMOKETEST_PORT} surveytool@${SMOKETEST_HOST}
        bash /usr/local/bin/deploy-to-openliberty.sh < cldr-apps.zip ${GITHUB_SHA}
        --override

        '
      shell: bash
  formatter:
    name: Formatter + Style checker
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Cache .git
      uses: actions/cache@v3
      with:
        key: git-${{ github.base_ref }}-${{ github.sha }}
        path: .git
        restore-keys: 'git-${{ github.base_ref }}-${{ github.sha }}

          git-${{ github.base_ref }}

          git-

          '
    - continue-on-error: true
      name: Checkout CLDR
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: false
    - continue-on-error: true
      name: Lint GitHub Actions
      run: npx yaml-lint .github/workflows/*.yml
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-mavenspotless-${{ hashFiles('tools/**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-mavenspotless-

          '
    - continue-on-error: true
      name: Check Java style
      run: mvn --file=tools/pom.xml spotless:check || (echo "Style checker failed.
        Formatting changes can be applied by 'mvn spotless:apply'" && exit 1)
name: cldr-mvn
on:
  repository_dispatch:
    types: trigger-ga___maven.yml
